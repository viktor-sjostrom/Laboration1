@model Laboration1.Models.Game

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Game</h4>
        <hr/>
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.gameId)

        <div class="form-group">
            @Html.LabelFor(model => model.GameName, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.GameName, new {htmlAttribute = new { @class = "form-control" }})
                @Html.ValidationMessageFor(model => model.GameName, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.Platform, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
            @Html.EditorFor(model => model.Platform, new {htmlAttribute = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Platform, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.PlayTime, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
            @Html.EditorFor(model => model.PlayTime, new {htmlAttribute = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.PlayTime, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.Rating, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
            @Html.EditorFor(model => model.Rating, new {htmlAttribute = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Rating, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
        @Html.LabelFor(model => model.Comment, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
            @Html.EditorFor(model => model.Comment, new {htmlAttribute = new { @class = "form-control" }})
            @Html.ValidationMessageFor(model => model.Comment, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RegistrationDate, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.RegistrationDate, new {htmlAttribute = new { @class = "form-control" }})
                @Html.ValidationMessageFor(model => model.RegistrationDate, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary">
            </div>
        </div>

    </div>
}

<div>
    <a asp-action="Library">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
